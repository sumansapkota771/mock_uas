# Generated by Django 4.2 on 2025-08-12 03:37

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ExamAttempt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('not_started', 'Not Started'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('auto_submitted', 'Auto Submitted'), ('terminated', 'Terminated')], default='not_started', max_length=20)),
                ('start_time', models.DateTimeField(blank=True, null=True)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('total_score', models.FloatField(blank=True, null=True)),
                ('percentage_score', models.FloatField(blank=True, null=True)),
                ('passed', models.BooleanField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ExamConfiguration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('exam_instructions', models.TextField(default='Please read all instructions carefully before starting the exam.')),
                ('negative_marking_info', models.TextField(default='Wrong answers will result in negative marking.')),
                ('technical_requirements', models.TextField(default='Ensure stable internet connection and quiet environment.')),
                ('auto_save_interval', models.PositiveIntegerField(default=30, help_text='Auto-save interval in seconds')),
                ('allow_section_navigation', models.BooleanField(default=False, help_text='Allow users to navigate between sections')),
                ('show_results_immediately', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Exam Configuration',
                'verbose_name_plural': 'Exam Configuration',
            },
        ),
        migrations.CreateModel(
            name='ExamSection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('reasoning', 'Reasoning Skills'), ('english', 'English Language Skills'), ('mathematical', 'Mathematical Skills'), ('advanced_math', 'Advanced Mathematical Skills'), ('ethical', 'Ethical Skills'), ('emotional', 'Emotional Intelligence Skills')], max_length=50, unique=True)),
                ('display_name', models.CharField(max_length=100)),
                ('duration_minutes', models.PositiveIntegerField(help_text='Duration in minutes')),
                ('max_score', models.PositiveIntegerField(default=20)),
                ('min_pass_score', models.FloatField(default=1.0, help_text='Minimum score to pass this section')),
                ('has_negative_marking', models.BooleanField(default=True)),
                ('instructions', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_text', models.TextField()),
                ('difficulty', models.CharField(choices=[('easy', 'Easy'), ('medium', 'Medium'), ('hard', 'Hard')], default='medium', max_length=10)),
                ('points', models.PositiveIntegerField(default=1)),
                ('negative_points', models.FloatField(default=0.25, help_text='Points deducted for wrong answer')),
                ('explanation', models.TextField(blank=True, help_text='Explanation for the correct answer')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='exams.examsection')),
            ],
            options={
                'ordering': ['section', 'id'],
            },
        ),
        migrations.CreateModel(
            name='QuestionOption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('option_text', models.TextField()),
                ('is_correct', models.BooleanField(default=False)),
                ('option_letter', models.CharField(choices=[('A', 'A'), ('B', 'B'), ('C', 'C'), ('D', 'D')], max_length=1)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='options', to='exams.question')),
            ],
            options={
                'ordering': ['option_letter'],
                'unique_together': {('question', 'option_letter')},
            },
        ),
        migrations.CreateModel(
            name='SectionAttempt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.DateTimeField(blank=True, null=True)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('score', models.FloatField(blank=True, null=True)),
                ('max_possible_score', models.PositiveIntegerField(blank=True, null=True)),
                ('questions_answered', models.PositiveIntegerField(default=0)),
                ('questions_correct', models.PositiveIntegerField(default=0)),
                ('is_completed', models.BooleanField(default=False)),
                ('exam_attempt', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='section_attempts', to='exams.examattempt')),
                ('section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='exams.examsection')),
            ],
            options={
                'unique_together': {('exam_attempt', 'section')},
            },
        ),
        migrations.CreateModel(
            name='MockExam',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('sections', models.ManyToManyField(to='exams.examsection')),
            ],
        ),
        migrations.AddField(
            model_name='examattempt',
            name='current_section',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='exams.examsection'),
        ),
        migrations.AddField(
            model_name='examattempt',
            name='exam',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='exams.mockexam'),
        ),
        migrations.AddField(
            model_name='examattempt',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exam_attempts', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='UserAnswer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_correct', models.BooleanField(blank=True, null=True)),
                ('points_earned', models.FloatField(default=0)),
                ('answered_at', models.DateTimeField(auto_now_add=True)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='exams.question')),
                ('section_attempt', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='exams.sectionattempt')),
                ('selected_option', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='exams.questionoption')),
            ],
            options={
                'unique_together': {('section_attempt', 'question')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='examattempt',
            unique_together={('user', 'exam', 'created_at')},
        ),
    ]
